/**
 * This class is generated by jOOQ
 */
package cn.axboy.demo.mixjpajooq.jooq.tables;


import cn.axboy.demo.mixjpajooq.jooq.DefaultSchema;
import cn.axboy.demo.mixjpajooq.jooq.Keys;
import cn.axboy.demo.mixjpajooq.jooq.tables.records.DemoProductRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DemoProduct extends TableImpl<DemoProductRecord> {

    private static final long serialVersionUID = 1184658546;

    /**
     * The reference instance of <code>demo_product</code>
     */
    public static final DemoProduct DEMO_PRODUCT = new DemoProduct();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DemoProductRecord> getRecordType() {
        return DemoProductRecord.class;
    }

    /**
     * The column <code>demo_product.id</code>.
     */
    public final TableField<DemoProductRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>demo_product.created_by</code>.
     */
    public final TableField<DemoProductRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>demo_product.created_time</code>.
     */
    public final TableField<DemoProductRecord, Long> CREATED_TIME = createField("created_time", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>demo_product.flag</code>.
     */
    public final TableField<DemoProductRecord, Integer> FLAG = createField("flag", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>demo_product.last_modified_by</code>.
     */
    public final TableField<DemoProductRecord, String> LAST_MODIFIED_BY = createField("last_modified_by", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>demo_product.last_modified_time</code>.
     */
    public final TableField<DemoProductRecord, Long> LAST_MODIFIED_TIME = createField("last_modified_time", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>demo_product.inventory</code>.
     */
    public final TableField<DemoProductRecord, Integer> INVENTORY = createField("inventory", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>demo_product.name</code>.
     */
    public final TableField<DemoProductRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>demo_product.category_id</code>.
     */
    public final TableField<DemoProductRecord, Long> CATEGORY_ID = createField("category_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>demo_product</code> table reference
     */
    public DemoProduct() {
        this("demo_product", null);
    }

    /**
     * Create an aliased <code>demo_product</code> table reference
     */
    public DemoProduct(String alias) {
        this(alias, DEMO_PRODUCT);
    }

    private DemoProduct(String alias, Table<DemoProductRecord> aliased) {
        this(alias, aliased, null);
    }

    private DemoProduct(String alias, Table<DemoProductRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DemoProductRecord, Long> getIdentity() {
        return Keys.IDENTITY_DEMO_PRODUCT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DemoProductRecord> getPrimaryKey() {
        return Keys.KEY_DEMO_PRODUCT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DemoProductRecord>> getKeys() {
        return Arrays.<UniqueKey<DemoProductRecord>>asList(Keys.KEY_DEMO_PRODUCT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DemoProductRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DemoProductRecord, ?>>asList(Keys.FKG2SQBVFN8C7MH2COX229TIS6);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DemoProduct as(String alias) {
        return new DemoProduct(alias, this);
    }

    /**
     * Rename this table
     */
    public DemoProduct rename(String name) {
        return new DemoProduct(name, null);
    }
}
